Vvar BaseObject, CELL_SIZE, Player, SCREEN_HEIGHT, SCREEN_WIDTH, StoneWall, camera, keyboard, player, setupKeybindings, stage;\u000a\u000aCELL_SIZE = 20;\u000a\u000aSCREEN_WIDTH = 800;\u000a\u000aSCREEN_HEIGHT = 400;\u000a\u000akeyboard = function(keyCodes) {\u000a  var key;\u000a  key = {};\u000a  key.codes = keyCodes;\u000a  key.isDown = false;\u000a  key.isUp = true;\u000a  key.press = void 0;\u000a  key.release = void 0;\u000a  key.downHandler = function(event) {\u000a    if ($.inArray(event.keyCode, key.codes) >= 0) {\u000a      if (key.isUp && key.press) {\u000a        key.press();\u000a        key.isDown = true;\u000a        key.isUp = false;\u000a        event.preventDefault();\u000a      }\u000a    }\u000a  };\u000a  key.upHandler = function(event) {\u000a    if ($.inArray(event.keyCode, key.codes) >= 0) {\u000a      if (key.isDown && key.release) {\u000a        key.release();\u000a        key.isDown = false;\u000a        key.isUp = true;\u000a        event.preventDefault();\u000a      }\u000a    }\u000a  };\u000a  window.addEventListener('keydown', key.downHandler.bind(key), false);\u000a  window.addEventListener('keyup', key.upHandler.bind(key), false);\u000a  return key;\u000a};\u000a\u000asetupKeybindings = function() {\u000a  var down, left, right, up;\u000a  left = keyboard([37, 72]);\u000a  up = keyboard([38, 75]);\u000a  right = keyboard([39, 76]);\u000a  down = keyboard([40, 74]);\u000a  left.press = function() {\u000a    player.sprite.x -= CELL_SIZE;\u000a    if (player.sprite.x < SCREEN_WIDTH / 3 - camera.x) {\u000a      camera.x += 25;\u000a    }\u000a  };\u000a  left.release = function() {};\u000a  right.press = function() {\u000a    player.sprite.x += CELL_SIZE;\u000a    if (player.sprite.x > 2 * SCREEN_WIDTH / 3 - camera.x) {\u000a      camera.x -= 25;\u000a    }\u000a  };\u000a  right.release = function() {};\u000a  up.press = function() {\u000a    player.sprite.y -= CELL_SIZE;\u000a    if (player.sprite.y < SCREEN_HEIGHT / 3 - camera.y) {\u000a      camera.y += 25;\u000a    }\u000a  };\u000a  up.release = function() {};\u000a  down.press = function() {\u000a    player.sprite.y += CELL_SIZE;\u000a    if (player.sprite.y > 2 * SCREEN_HEIGHT / 3 - camera.y) {\u000a      camera.y -= 25;\u000a    }\u000a  };\u000a  return down.release = function() {};\u000a};\u000a\u000aBaseObject = function(info) {\u000a  this.sprite = info.sprite;\u000a  this.info = {\u000a    solid: info.solid || true\u000a  };\u000a};\u000a\u000aPlayer = function(info) {\u000a  info.sprite = new PIXI.Text('@', {\u000a    'fill': 'white',\u000a    'font': '17px Arial'\u000a  });\u000a  BaseObject.call(this, info);\u000a};\u000a\u000aStoneWall = function(info) {\u000a  info.sprite = PIXI.Texture.fromImage('static/img/wall20.png');\u000a  BaseObject.call(this, info);\u000a};\u000a\u000aBaseObject.prototype = {\u000a  constructor: BaseObject,\u000a  draw: function(x, y) {\u000a    var spriteInstance;\u000a    spriteInstance = new PIXI.Sprite(this.sprite);\u000a    spriteInstance.x = x;\u000a    spriteInstance.y = y;\u000a    stage.addChild(spriteInstance);\u000a  }\u000a};\u000a\u000aPlayer.prototype = Object.create(BaseObject.prototype);\u000a\u000aStoneWall.prototype = Object.create(BaseObject.prototype);\u000a\u000aplayer = new Player({});\u000a\u000astage = new PIXI.Container;\u000a\u000acamera = new PIXI.Container;\u000a\u000a$(document).ready(function() {\u000a  var gameLoop, i, renderer, stoneWall;\u000a  gameLoop = function() {\u000a    var stoneWall;\u000a    requestAnimationFrame(gameLoop);\u000a    renderer.render(camera);\u000a  };\u000a  $('h2').css('color', 'white').css('text-align', 'center');\u000a  renderer = PIXI.autoDetectRenderer(SCREEN_WIDTH, SCREEN_HEIGHT, {\u000a    backgroundColor: 0x000000\u000a  });\u000a  document.body.appendChild(renderer.view);\u000a  player.sprite.x = 20;\u000a  player.sprite.y = 20;\u000a  setupKeybindings();\u000a  stage.addChild(player.sprite);\u000a  i = 0;\u000a  while (i < SCREEN_WIDTH / CELL_SIZE) {\u000a    stoneWall = new StoneWall({});\u000a    stoneWall.draw(i * CELL_SIZE, 0);\u000a    stoneWall.draw(i * CELL_SIZE, SCREEN_HEIGHT - CELL_SIZE);\u000a    i++;\u000a  }\u000a  i = 1;\u000a  while (i < SCREEN_HEIGHT / CELL_SIZE - 1) {\u000a    stoneWall = new StoneWall({});\u000a    stoneWall.draw(0, i * CELL_SIZE);\u000a    stoneWall.draw(SCREEN_WIDTH - CELL_SIZE, i * CELL_SIZE);\u000a    i++;\u000a  }\u000a  camera.addChild(stage);\u000a  gameLoop();\u000a});\u000a
p1
.